// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`example app 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container:
      image: alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: \\"16\\"
      - name: Build
        run: echo \\"nothing to do (cdk.out is committed)\\"
      - run: echo post-build
  Assets-DockerAsset1:
    name: Publish Assets Assets-DockerAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - uses: docker/login-action@v2
        with:
          registry: 000000000000.dkr.ecr.us-east-1.amazonaws.com
      - id: Publish
        name: Publish Assets-DockerAsset1
        run: /bin/bash ./cdk.out/assembly-StageA/publish-Assets-DockerAsset1-step.sh
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-StageA/publish-Assets-FileAsset1-step.sh
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset2
        run: /bin/bash ./cdk.out/assembly-StageA/publish-Assets-FileAsset2-step.sh
  Assets-FileAsset3:
    name: Publish Assets Assets-FileAsset3
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset3
        run: /bin/bash ./cdk.out/assembly-StageA/publish-Assets-FileAsset3-step.sh
  Assets-FileAsset4:
    name: Publish Assets Assets-FileAsset4
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset4
        run: /bin/bash ./cdk.out/assembly-StageA/publish-Assets-FileAsset4-step.sh
  Assets-FileAsset5:
    name: Publish Assets Assets-FileAsset5
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset5
        run: /bin/bash ./cdk.out/assembly-StageB/publish-Assets-FileAsset5-step.sh
  Assets-FileAsset6:
    name: Publish Assets Assets-FileAsset6
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset6
        run: /bin/bash ./cdk.out/assembly-StageB/publish-Assets-FileAsset6-step.sh
  StageA-Pre:
    name: Pre
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - Build-Build
    env: {}
    steps:
      - run: echo hello
  StageA-BucketStack-Deploy:
    name: Deploy StageABucketStackEAC67DBE
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
      - StageA-Pre
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageA-BucketStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
  StageA-FunctionStack-Deploy:
    name: Deploy StageAFunctionStackD42C27B8
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset3
      - Assets-FileAsset4
      - Assets-DockerAsset1
      - StageA-BucketStack-Deploy
      - StageA-Pre
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageA-FunctionStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset3.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
    outputs:
      myout: \${{ steps.Deploy.outputs.myout }}
  StageA-Post:
    name: Post
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - StageA-FunctionStack-Deploy
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
      - Build-Build
    env:
      FN_NAME: \${{ needs.StageA-FunctionStack-Deploy.outputs.myout }}
    steps:
      - run: \\"echo FN_NAME equals: $FN_NAME\\"
  StageB-BucketStack-Deploy:
    name: Deploy StageBBucketStackDF3FFF07
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset5
      - Assets-FileAsset2
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
      - StageA-Pre
      - StageA-Post
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-northwest-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::222222222222:role/cdk-hnb659fds-deploy-role-222222222222-cn-northwest-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageB-BucketStack
          template: https://cdk-hnb659fds-assets-222222222222-cn-northwest-1.s3.cn-northwest-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset5.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::222222222222:role/cdk-hnb659fds-cfn-exec-role-222222222222-cn-northwest-1
  StageB-FunctionStack-Deploy:
    name: Deploy StageBFunctionStack18098DCD
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset6
      - Assets-FileAsset4
      - Assets-DockerAsset1
      - StageB-BucketStack-Deploy
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
      - StageA-Pre
      - StageA-Post
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-northwest-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::222222222222:role/cdk-hnb659fds-deploy-role-222222222222-cn-northwest-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageB-FunctionStack
          template: https://cdk-hnb659fds-assets-222222222222-cn-northwest-1.s3.cn-northwest-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset6.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::222222222222:role/cdk-hnb659fds-cfn-exec-role-222222222222-cn-northwest-1
"
`;

exports[`pipeline publish asset scripts are in stage assembly directory 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: \\"\\"
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: github.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStage/publish-Assets-FileAsset1-step.sh
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: github.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset2
        run: /bin/bash ./cdk.out/assembly-MyStage/publish-Assets-FileAsset2-step.sh
  MyStage-MyStack-Deploy:
    name: Deploy MyStageMyStackD5720EA1
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStage-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
"
`;

exports[`pipeline with GitHub hosted runner override 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: windows-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
"
`;

exports[`pipeline with job settings 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    if: github.repository == 'account/repo'
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: \\"\\"
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    if: github.repository == 'account/repo'
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: github.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStack/publish-Assets-FileAsset1-step.sh
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    if: github.repository == 'account/repo'
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: github.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset2
        run: /bin/bash ./cdk.out/assembly-MyStack/publish-Assets-FileAsset2-step.sh
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    if: github.repository == 'account/repo'
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStack-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
"
`;

exports[`pipeline with oidc authentication 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: github.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::000000000000:role/GitHubActionRole
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStack/publish-Assets-FileAsset1-step.sh
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: github.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::000000000000:role/GitHubActionRole
      - id: Publish
        name: Publish Assets-FileAsset2
        run: /bin/bash ./cdk.out/assembly-MyStack/publish-Assets-FileAsset2-step.sh
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    permissions:
      contents: read
      id-token: write
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::000000000000:role/GitHubActionRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: \${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStack-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
"
`;

exports[`pipeline with only a synth step 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
"
`;

exports[`pipeline with publish asset region override 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: \\"\\"
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: github.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStack/publish-Assets-FileAsset1-step.sh
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: github.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset2
        run: /bin/bash ./cdk.out/assembly-MyStack/publish-Assets-FileAsset2-step.sh
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStack-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
"
`;

exports[`pipeline with self-hosted runner override 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on:
      - self-hosted
      - label1
      - label2
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
"
`;

exports[`single wave/stage/stack 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: \\"\\"
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: github.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStack/publish-Assets-FileAsset1-step.sh
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: github.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset2
        run: /bin/bash ./cdk.out/assembly-MyStack/publish-Assets-FileAsset2-step.sh
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStack-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
"
`;
