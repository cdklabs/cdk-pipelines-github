// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`correct format for docker credentials: DockerHub 1`] = `
"name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container: null
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v2.1.1
        with:
          name: cdk.out
          path: cdk.out
  Assets-DockerAsset1:
    name: Publish Assets Assets-DockerAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: temp.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - uses: docker/login-action@v1
        with:
          username: \${{ secrets.DOCKERHUB_USERNAME }}
          password: \${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish Assets-DockerAsset1
        run: /bin/bash ./cdk.out/publish-Assets-DockerAsset1-step.sh
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: temp.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset1-step.sh
  MyStage-BuildStack-Deploy:
    name: Deploy MyStageBuildStackEE7613FD
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-DockerAsset1
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::000000000000:role/cdk-hnb659fds-deploy-role-000000000000-us-east-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStage-BuildStack
          template: https://cdk-hnb659fds-assets-000000000000-us-east-1.s3.us-east-1.amazonaws.com/bf3395b0ca977c5e3fcf8e3905a8a6981b81d7356e390da732ec29f385bb7ec0.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::000000000000:role/cdk-hnb659fds-cfn-exec-role-000000000000-us-east-1
"
`;

exports[`correct format for docker credentials: ECR 1`] = `
"name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container: null
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v2.1.1
        with:
          name: cdk.out
          path: cdk.out
  Assets-DockerAsset1:
    name: Publish Assets Assets-DockerAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: temp.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - uses: docker/login-action@v1
        with:
          registry: 000000000000.dkr.ecr.us-east-1.amazonaws.com
      - name: Publish Assets-DockerAsset1
        run: /bin/bash ./cdk.out/publish-Assets-DockerAsset1-step.sh
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: temp.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset1-step.sh
  MyStage-BuildStack-Deploy:
    name: Deploy MyStageBuildStackEE7613FD
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-DockerAsset1
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::000000000000:role/cdk-hnb659fds-deploy-role-000000000000-us-east-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStage-BuildStack
          template: https://cdk-hnb659fds-assets-000000000000-us-east-1.s3.us-east-1.amazonaws.com/bf3395b0ca977c5e3fcf8e3905a8a6981b81d7356e390da732ec29f385bb7ec0.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::000000000000:role/cdk-hnb659fds-cfn-exec-role-000000000000-us-east-1
"
`;

exports[`correct format for docker credentials: custom registry 1`] = `
"name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container: null
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v2.1.1
        with:
          name: cdk.out
          path: cdk.out
  Assets-DockerAsset1:
    name: Publish Assets Assets-DockerAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: temp.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - uses: docker/login-action@v1
        with:
          registry: registry
          username: \${{ secrets.CUSTOM_USERNAME }}
          password: \${{ secrets.CUSTOM_PASSWORD }}
      - name: Publish Assets-DockerAsset1
        run: /bin/bash ./cdk.out/publish-Assets-DockerAsset1-step.sh
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: temp.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset1-step.sh
  MyStage-BuildStack-Deploy:
    name: Deploy MyStageBuildStackEE7613FD
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-DockerAsset1
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::000000000000:role/cdk-hnb659fds-deploy-role-000000000000-us-east-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStage-BuildStack
          template: https://cdk-hnb659fds-assets-000000000000-us-east-1.s3.us-east-1.amazonaws.com/bf3395b0ca977c5e3fcf8e3905a8a6981b81d7356e390da732ec29f385bb7ec0.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::000000000000:role/cdk-hnb659fds-cfn-exec-role-000000000000-us-east-1
"
`;

exports[`correct format for docker credentials: multiple credentials 1`] = `
"name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container: null
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v2.1.1
        with:
          name: cdk.out
          path: cdk.out
  Assets-DockerAsset1:
    name: Publish Assets Assets-DockerAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: temp.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - uses: docker/login-action@v1
        with:
          username: \${{ secrets.DOCKERHUB_USERNAME }}
          password: \${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/login-action@v1
        with:
          registry: 000000000000.dkr.ecr.us-east-1.amazonaws.com
      - name: Publish Assets-DockerAsset1
        run: /bin/bash ./cdk.out/publish-Assets-DockerAsset1-step.sh
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: temp.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset1-step.sh
  MyStage-BuildStack-Deploy:
    name: Deploy MyStageBuildStackEE7613FD
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-DockerAsset1
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::000000000000:role/cdk-hnb659fds-deploy-role-000000000000-us-east-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStage-BuildStack
          template: https://cdk-hnb659fds-assets-000000000000-us-east-1.s3.us-east-1.amazonaws.com/bf3395b0ca977c5e3fcf8e3905a8a6981b81d7356e390da732ec29f385bb7ec0.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::000000000000:role/cdk-hnb659fds-cfn-exec-role-000000000000-us-east-1
"
`;
