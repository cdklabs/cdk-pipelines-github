// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`can set pre/post github action job step 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Synth:
    name: Synthesize
    if: contains(fromJson('[\\"push\\", \\"pull_request\\"]'), github.event_name)
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    if: contains(fromJson('[\\"push\\", \\"pull_request\\"]'), github.event_name)
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: stage.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash
          ./cdk.out/assembly-MyPrePostStack/publish-Assets-FileAsset1-step.sh
  MyPrePostStack-PreDeployAction:
    name: PreDeployAction
    if: contains(fromJson('[\\"push\\", \\"pull_request\\"]'), github.event_name)
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - Build-Synth
    env: {}
    steps:
      - name: pre deploy action
        uses: my-pre-deploy-action@1.0.0
        with:
          app-id: 1234
          secrets: my-secrets
  MyPrePostStack-MyStack-Deploy:
    name: Deploy MyPrePostStackMyStack8AD5AF9E
    if: success() && contains(github.event.issue.labels.*.name, 'deploy')
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Synth
      - Assets-FileAsset1
      - MyPrePostStack-PreDeployAction
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyPrePostStack-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
  MyPrePostStack-PostDeployAction:
    name: PostDeployAction
    if: contains(fromJson('[\\"push\\", \\"pull_request\\"]'), github.event_name)
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - MyPrePostStack-MyStack-Deploy
      - Build-Synth
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: post deploy action
        uses: my-post-deploy-action@1.0.0
        with:
          app-id: 4321
          secrets: secrets
"
`;

exports[`cloudformation stack capabilities can specify multiple capabilities 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: stage.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStack/publish-Assets-FileAsset1-step.sh
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStack-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
"
`;

exports[`cloudformation stack capabilities can specify stack capabilities 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: stage.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStack/publish-Assets-FileAsset1-step.sh
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStack-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          capabilities: CAPABILITY_NAMED_IAM
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
"
`;

exports[`github environment can specify multiple github environments 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: stage.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStage1/publish-Assets-FileAsset1-step.sh
  MyStage1-MyStack-Deploy:
    name: Deploy MyStage1MyStack61AF4CC5
    permissions:
      contents: read
      id-token: none
    environment: test
    needs:
      - Build-Build
      - Assets-FileAsset1
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStage1-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
  MyStage2-MyStack-Deploy:
    name: Deploy MyStage2MyStack9B82AF96
    permissions:
      contents: read
      id-token: none
    environment: prod
    needs:
      - Build-Build
      - Assets-FileAsset1
      - MyStage1-MyStack-Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-northwest-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::222222222222:role/cdk-hnb659fds-deploy-role-222222222222-cn-northwest-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStage2-MyStack
          template: https://cdk-hnb659fds-assets-222222222222-cn-northwest-1.s3.cn-northwest-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::222222222222:role/cdk-hnb659fds-cfn-exec-role-222222222222-cn-northwest-1
"
`;

exports[`github stages in waves works 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    if: contains(github.event.issue.labels.*.name, 'deployToA') ||
      contains(github.event.issue.labels.*.name, 'deployToB')
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    if: contains(github.event.issue.labels.*.name, 'deployToA') ||
      contains(github.event.issue.labels.*.name, 'deployToB')
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: stage.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStageA/publish-Assets-FileAsset1-step.sh
  MyWave-PreWaveAction:
    name: PreWaveAction
    if: contains(github.event.issue.labels.*.name, 'deployToA') ||
      contains(github.event.issue.labels.*.name, 'deployToB')
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - Build-Build
    env: {}
    steps:
      - name: pre wave action
        uses: my-pre-wave-action@1.0.0
        with:
          app-id: 1234
          secrets: my-secrets
  MyWave-MyStageA-MyStackA-Deploy:
    name: Deploy MyStageAMyStackA0F0BE321
    if: success() && contains(github.event.issue.labels.*.name, 'deployToA')
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - MyWave-PreWaveAction
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStageA-MyStackA
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
  MyWave-MyStageB-MyStackB-Deploy:
    name: Deploy MyStageBMyStackBFE4B1ADE
    if: success() && contains(github.event.issue.labels.*.name, 'deployToB')
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - MyWave-PreWaveAction
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::12345678901:role/cdk-hnb659fds-deploy-role-12345678901-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStageB-MyStackB
          template: https://cdk-hnb659fds-assets-12345678901-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::12345678901:role/cdk-hnb659fds-cfn-exec-role-12345678901-cn-north-1
  MyWave-PostWaveAction:
    name: PostWaveAction
    if: contains(github.event.issue.labels.*.name, 'deployToA') ||
      contains(github.event.issue.labels.*.name, 'deployToB')
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - MyWave-MyStageA-MyStackA-Deploy
      - MyWave-MyStageB-MyStackB-Deploy
      - Build-Build
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: post wave action
        uses: my-post-wave-action@1.0.0
        with:
          app-id: 4321
          secrets: secrets
"
`;

exports[`job settings can specify job settings at stage level 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: stage.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStack/publish-Assets-FileAsset1-step.sh
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    if: github.repository == 'github/repo'
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStack-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
"
`;

exports[`stages in github waves works 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: stage.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStageA/publish-Assets-FileAsset1-step.sh
  MyWave-MyStageA-MyStackA-Deploy:
    name: Deploy MyStageAMyStackA0F0BE321
    if: success() && contains(github.event.issue.labels.*.name, 'deployToA')
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStageA-MyStackA
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
  MyWave-MyStageB-MyStackB-Deploy:
    name: Deploy MyStageBMyStackBFE4B1ADE
    if: success() && contains(github.event.issue.labels.*.name, 'deployToB')
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::12345678901:role/cdk-hnb659fds-deploy-role-12345678901-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStageB-MyStackB
          template: https://cdk-hnb659fds-assets-12345678901-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::12345678901:role/cdk-hnb659fds-cfn-exec-role-12345678901-cn-north-1
"
`;

exports[`stages in pipeline works with \`if\` 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: \${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: stage.cn.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/assembly-MyStageA/publish-Assets-FileAsset1-step.sh
  MyStageA-MyStackA-Deploy:
    name: Deploy MyStageAMyStackA0F0BE321
    if: success() && contains(github.event.issue.labels.*.name, 'deployToA')
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStageA-MyStackA
          template: https://cdk-hnb659fds-assets-111111111111-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-cn-north-1
  MyStageB-MyStackB-Deploy:
    name: Deploy MyStageBMyStackBFE4B1ADE
    if: success() && contains(github.event.issue.labels.*.name, 'deployToB')
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - MyStageA-MyStackA-Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws-cn:iam::12345678901:role/cdk-hnb659fds-deploy-role-12345678901-cn-north-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStageB-MyStackB
          template: https://cdk-hnb659fds-assets-12345678901-cn-north-1.s3.cn-north-1.amazonaws.com.cn/\${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws-cn:iam::12345678901:role/cdk-hnb659fds-cfn-exec-role-12345678901-cn-north-1
"
`;
