// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`example app 1`] = `
"name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container:
      image: alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: \\"14\\"
      - name: Build
        run: echo \\"nothing to do (cdk.out is committed)\\"
      - run: echo post-build
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish d91a9bc365990344018832d830907ebddc8ad0bc2194fcc75394e349e5321d5c
          (template)
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageA/StageABucketStackEAC67DBE.assets.json\\"
          --verbose publish
          \\"d91a9bc365990344018832d830907ebddc8ad0bc2194fcc75394e349e5321d5c:111111111111-us-east-1\\"
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: \\"Publish 15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538
          \\"
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageA/StageABucketStackEAC67DBE.assets.json\\"
          --verbose publish
          \\"15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538:111111111111-us-east-1\\"
      - name: \\"Publish 15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538
          \\"
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageB/StageBBucketStackDF3FFF07.assets.json\\"
          --verbose publish
          \\"15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538:222222222222-eu-west-2\\"
  Assets-FileAsset3:
    name: Publish Assets Assets-FileAsset3
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish e828d285344c57d0d73d24cdf71c5d1634be1b3b871e3b0b4387b820200e66d5
          (template)
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageA/StageAFunctionStackD42C27B8.assets.json\\"
          --verbose publish
          \\"e828d285344c57d0d73d24cdf71c5d1634be1b3b871e3b0b4387b820200e66d5:111111111111-us-east-1\\"
  Assets-FileAsset4:
    name: Publish Assets Assets-FileAsset4
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: \\"Publish 110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c
          \\"
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageA/StageAFunctionStackD42C27B8.assets.json\\"
          --verbose publish
          \\"110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c:111111111111-us-east-1\\"
      - name: \\"Publish 110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c
          \\"
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageB/StageBFunctionStack18098DCD.assets.json\\"
          --verbose publish
          \\"110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c:222222222222-eu-west-2\\"
  Assets-FileAsset5:
    name: Publish Assets Assets-FileAsset5
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish f760e18d005d5f268eecaaab64b0bf87550e61341feccfa411f21021081ae29b
          (template)
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageB/StageBBucketStackDF3FFF07.assets.json\\"
          --verbose publish
          \\"f760e18d005d5f268eecaaab64b0bf87550e61341feccfa411f21021081ae29b:222222222222-eu-west-2\\"
  Assets-FileAsset6:
    name: Publish Assets Assets-FileAsset6
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish 9c7fe3a612e05fb216f2c03f521bf62403a7291033cff4e78bc51f4f47f630a4
          (template)
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageB/StageBFunctionStack18098DCD.assets.json\\"
          --verbose publish
          \\"9c7fe3a612e05fb216f2c03f521bf62403a7291033cff4e78bc51f4f47f630a4:222222222222-eu-west-2\\"
  StageA-BucketStack-Deploy:
    name: Deploy StageABucketStackEAC67DBE
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageA-BucketStack
          template: https://cdk-hnb659fds-assets-111111111111-us-east-1.s3.us-east-1.amazonaws.com/d91a9bc365990344018832d830907ebddc8ad0bc2194fcc75394e349e5321d5c.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-us-east-1
  StageA-FunctionStack-Deploy:
    name: Deploy StageAFunctionStackD42C27B8
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset3
      - Assets-FileAsset4
      - StageA-BucketStack-Deploy
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageA-FunctionStack
          template: https://cdk-hnb659fds-assets-111111111111-us-east-1.s3.us-east-1.amazonaws.com/e828d285344c57d0d73d24cdf71c5d1634be1b3b871e3b0b4387b820200e66d5.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-us-east-1
  StageB-BucketStack-Deploy:
    name: Deploy StageBBucketStackDF3FFF07
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset5
      - Assets-FileAsset2
      - Build-Build
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::222222222222:role/cdk-hnb659fds-deploy-role-222222222222-eu-west-2
          role-external-id: Pipeline
      - uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageB-BucketStack
          template: https://cdk-hnb659fds-assets-222222222222-eu-west-2.s3.eu-west-2.amazonaws.com/f760e18d005d5f268eecaaab64b0bf87550e61341feccfa411f21021081ae29b.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::222222222222:role/cdk-hnb659fds-cfn-exec-role-222222222222-eu-west-2
  StageB-FunctionStack-Deploy:
    name: Deploy StageBFunctionStack18098DCD
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset6
      - Assets-FileAsset4
      - StageB-BucketStack-Deploy
      - Build-Build
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::222222222222:role/cdk-hnb659fds-deploy-role-222222222222-eu-west-2
          role-external-id: Pipeline
      - uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageB-FunctionStack
          template: https://cdk-hnb659fds-assets-222222222222-eu-west-2.s3.eu-west-2.amazonaws.com/9c7fe3a612e05fb216f2c03f521bf62403a7291033cff4e78bc51f4f47f630a4.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::222222222222:role/cdk-hnb659fds-cfn-exec-role-222222222222-eu-west-2
"
`;

exports[`pipeline with only a synth step 1`] = `
"name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container: null
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v2.1.1
        with:
          name: cdk.out
          path: cdk.out
"
`;

exports[`single wave/stage/stack 1`] = `
"name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container: null
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: \\"\\"
      - name: Upload cdk.out
        uses: actions/upload-artifact@v2.1.1
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish 52c2fe7f725481c405841b55cfb41b81965fadaa71665186ffb031ecd3f0ef36
          (template)
        run: npx cdk-assets --path
          \\"cdk.out/assembly-MyStack/MyStack098574E7.assets.json\\" --verbose
          publish
          \\"52c2fe7f725481c405841b55cfb41b81965fadaa71665186ffb031ecd3f0ef36:111111111111-us-east-1\\"
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: \\"Publish 110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c
          \\"
        run: npx cdk-assets --path
          \\"cdk.out/assembly-MyStack/MyStack098574E7.assets.json\\" --verbose
          publish
          \\"110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c:111111111111-us-east-1\\"
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStack-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-us-east-1.s3.us-east-1.amazonaws.com/52c2fe7f725481c405841b55cfb41b81965fadaa71665186ffb031ecd3f0ef36.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-us-east-1
"
`;
