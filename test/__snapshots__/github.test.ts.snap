// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`example app 1`] = `
"name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container:
      image: alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: \\"14\\"
      - name: Build
        run: echo \\"nothing to do (cdk.out is committed)\\"
      - run: echo post-build
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish d0151522433d7ac92ed3f07846e8d08e4668f85a905021d40d15b5f12ce87312
          (template)
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageA/StageABucketStackEAC67DBE.assets.json\\"
          --verbose publish
          \\"d0151522433d7ac92ed3f07846e8d08e4668f85a905021d40d15b5f12ce87312:111111111111-us-east-1\\"
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: \\"Publish 8232f53b1494e586db8f965674400246af9ebad94a92aacc2ab86d7165bcc29c
          \\"
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageA/StageABucketStackEAC67DBE.assets.json\\"
          --verbose publish
          \\"8232f53b1494e586db8f965674400246af9ebad94a92aacc2ab86d7165bcc29c:111111111111-us-east-1\\"
      - name: \\"Publish 8232f53b1494e586db8f965674400246af9ebad94a92aacc2ab86d7165bcc29c
          \\"
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageB/StageBBucketStackDF3FFF07.assets.json\\"
          --verbose publish
          \\"8232f53b1494e586db8f965674400246af9ebad94a92aacc2ab86d7165bcc29c:222222222222-eu-west-2\\"
  Assets-FileAsset3:
    name: Publish Assets Assets-FileAsset3
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish 2b76b6e7827741c47ea23ee5e4c9455890a985c6f83fbe72535161e58c6a4011
          (template)
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageA/StageAFunctionStackD42C27B8.assets.json\\"
          --verbose publish
          \\"2b76b6e7827741c47ea23ee5e4c9455890a985c6f83fbe72535161e58c6a4011:111111111111-us-east-1\\"
  Assets-FileAsset4:
    name: Publish Assets Assets-FileAsset4
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: \\"Publish 110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c
          \\"
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageA/StageAFunctionStackD42C27B8.assets.json\\"
          --verbose publish
          \\"110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c:111111111111-us-east-1\\"
      - name: \\"Publish 110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c
          \\"
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageB/StageBFunctionStack18098DCD.assets.json\\"
          --verbose publish
          \\"110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c:222222222222-eu-west-2\\"
  Assets-FileAsset5:
    name: Publish Assets Assets-FileAsset5
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish 5ae9e50bf570e848ef6b45cf7bae05d88f01f19d92ef04990590748c874e35cb
          (template)
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageB/StageBBucketStackDF3FFF07.assets.json\\"
          --verbose publish
          \\"5ae9e50bf570e848ef6b45cf7bae05d88f01f19d92ef04990590748c874e35cb:222222222222-eu-west-2\\"
  Assets-FileAsset6:
    name: Publish Assets Assets-FileAsset6
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish f522207b24e98ade0b71c2c5af6725b0d18680ad80a169344ee4e952831dcba3
          (template)
        run: npx cdk-assets --path
          \\"cdk.out/assembly-StageB/StageBFunctionStack18098DCD.assets.json\\"
          --verbose publish
          \\"f522207b24e98ade0b71c2c5af6725b0d18680ad80a169344ee4e952831dcba3:222222222222-eu-west-2\\"
  StageA-BucketStack-Deploy:
    name: Deploy StageABucketStackEAC67DBE
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageA-BucketStack
          template: https://cdk-hnb659fds-assets-111111111111-us-east-1.s3.us-east-1.amazonaws.com/d0151522433d7ac92ed3f07846e8d08e4668f85a905021d40d15b5f12ce87312.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-us-east-1
  StageA-FunctionStack-Deploy:
    name: Deploy StageAFunctionStackD42C27B8
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset3
      - Assets-FileAsset4
      - StageA-BucketStack-Deploy
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageA-FunctionStack
          template: https://cdk-hnb659fds-assets-111111111111-us-east-1.s3.us-east-1.amazonaws.com/2b76b6e7827741c47ea23ee5e4c9455890a985c6f83fbe72535161e58c6a4011.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-us-east-1
  StageB-BucketStack-Deploy:
    name: Deploy StageBBucketStackDF3FFF07
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset5
      - Assets-FileAsset2
      - Build-Build
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::222222222222:role/cdk-hnb659fds-deploy-role-222222222222-eu-west-2
          role-external-id: Pipeline
      - uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageB-BucketStack
          template: https://cdk-hnb659fds-assets-222222222222-eu-west-2.s3.eu-west-2.amazonaws.com/5ae9e50bf570e848ef6b45cf7bae05d88f01f19d92ef04990590748c874e35cb.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::222222222222:role/cdk-hnb659fds-cfn-exec-role-222222222222-eu-west-2
  StageB-FunctionStack-Deploy:
    name: Deploy StageBFunctionStack18098DCD
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset6
      - Assets-FileAsset4
      - StageB-BucketStack-Deploy
      - Build-Build
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::222222222222:role/cdk-hnb659fds-deploy-role-222222222222-eu-west-2
          role-external-id: Pipeline
      - uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageB-FunctionStack
          template: https://cdk-hnb659fds-assets-222222222222-eu-west-2.s3.eu-west-2.amazonaws.com/f522207b24e98ade0b71c2c5af6725b0d18680ad80a169344ee4e952831dcba3.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::222222222222:role/cdk-hnb659fds-cfn-exec-role-222222222222-eu-west-2
"
`;

exports[`pipeline with only a synth step 1`] = `
"name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container: null
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload cdk.out
        uses: actions/upload-artifact@v2.1.1
        with:
          name: cdk.out
          path: cdk.out
"
`;

exports[`single wave/stage/stack 1`] = `
"name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container: null
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: \\"\\"
      - name: Upload cdk.out
        uses: actions/upload-artifact@v2.1.1
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: Publish af7749d7f1c46027a5e1953115abdca837b778244f954047be91f5f1911646ca
          (template)
        run: npx cdk-assets --path
          \\"cdk.out/assembly-MyStack/MyStack098574E7.assets.json\\" --verbose
          publish
          \\"af7749d7f1c46027a5e1953115abdca837b778244f954047be91f5f1911646ca:111111111111-us-east-1\\"
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-skip-session-tagging: true
          role-duration-seconds: 1800
      - name: \\"Publish 110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c
          \\"
        run: npx cdk-assets --path
          \\"cdk.out/assembly-MyStack/MyStack098574E7.assets.json\\" --verbose
          publish
          \\"110e18dfbcf5cf9d2a3778bf70a12ceccf9eb10d7dd493ef917073e32450a46c:111111111111-us-east-1\\"
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    permissions:
      contents: none
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: MyStack-MyStack
          template: https://cdk-hnb659fds-assets-111111111111-us-east-1.s3.us-east-1.amazonaws.com/af7749d7f1c46027a5e1953115abdca837b778244f954047be91f5f1911646ca.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::111111111111:role/cdk-hnb659fds-cfn-exec-role-111111111111-us-east-1
"
`;
